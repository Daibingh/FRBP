function my_face_rec2(varargin)
% clc
% 空间属性参数
clc
addpath('..\face_detection');
addpath('..\common');
addpath('..\face_recognition\PCA');
addpath('..\face_recognition\LDA');
addpath('..\face_recognition\PCA_LDA');
addpath('..\face_recognition\MPCA');
addpath('..\face_recognition\MPCA_LDA');
strList = {'选择第一张','选择最后一张','随机'};
% 建立控件
h_mainfig = figure('units','characters', ...
                    'position',[86.8 9.385 179.6 45.62], ...
                    'color',[0.83,0.81,0.78], ...
                    'visible','off', ...
                    'menubar','none', ...
                    'name','main', ...
                    'resize', 'off', ...
                    'DeleteFcn', @mainfigDeleteFcn);
h_panelOut = uipanel('parent',h_mainfig, ...
                    'units','characters', ...
                    'position',[2.4 0.3846 173.8 9.538], ....
                    'title', '状态栏', ...
                    'fontsize',12);
h_panelRec = uipanel('parent',h_mainfig, ...
                    'units','characters', ...
                    'position',[2 10.69 174.6 20.31], ....
                    'title', '人脸识别模块', ...
                    'fontsize',12);                              
h_panelDet = uipanel('parent',h_mainfig, ...
                    'units','characters', ...
                    'position',[42 30.9 35.6 13.31], ....
                    'title', '人脸检测模块', ...
                    'fontsize',12);
h_listboxOut = uicontrol('style','listbox', ...
                        'parent',h_panelOut, ...
                        'units','characters', ...
                        'position',[1.2 0.3077 171 7.462], ...
                        'backgroundcolor','w', ...
                        'fontsize', 10);                
h_panelSho = uipanel('parent',h_mainfig, ...
                    'units','characters', ...
                    'position',[79.8 30.92 96.8 13.31], ...
                    'title','图像显示', ...
                    'fontsize',12);   
h_panelLoa = uipanel('parent',h_panelRec, ...
                    'units','characters', ...
                    'position',[1.4 0.8462 22.2 17.23], ...
                    'title','人脸库解析', ...
                    'fontsize',10); 
h_panelDiv = uipanel('parent',h_panelRec, ...
                    'units','characters', ...
                    'position',[25 0.8462 27.6 17.23], ...
                    'title','人脸库划分', ...
                    'fontsize',10);                 
h_panelTra = uipanel('parent',h_panelRec, ...
                    'units','characters', ...
                    'position',[55.2 0.8462 74.6 17.23], ...
                    'title','训练', ...
                    'fontsize',10);     
h_panelTes = uipanel('parent',h_panelRec, ...
                    'units','characters', ...
                    'position',[133.2 0.8462 34.6 17.23], ...
                    'title','测试', ...
                    'fontsize',10);    
h_panelMet = uibuttongroup('parent',h_panelTra, ...
                     'units','characters', ...
                     'position',[1.6 0.6923 20.8 14.77], ...
                     'title','训练方法', ...
                     'fontsize',8, ...
                     'SelectionChangeFcn', @panelMetCallback);
h_panelPar = uipanel('parent',h_panelTra, ...
                     'units','characters', ...
                     'position',[22.2 0.6923 35.4 14.77], ...
                     'title','参数设置', ...
                     'fontsize',8);         
h_panelDR = uipanel('parent', h_mainfig, ...
                    'units', 'characters', ...
                    'position', [2.4 30.9 37.4 13.4], ...
                    'title', '检测+识别', ...
                    'fontsize', 12 );                                  
                 
h_button1 = uicontrol('parent',h_panelDet, ...
                      'units','characters', ...
                      'position', [10 8 15.8 2.5], ...
                      'string', '图片检测', ...
                      'fontsize', 10, ...
                      'callback', @button1Callback);      
h_button2 = uicontrol('parent',h_panelDet, ...
                      'units','characters', ...
                      'position', [10 4.15 15.8 2.5], ...
                      'string', '摄像头检测', ...
                      'fontsize', 10, ...
                      'callback', @button2Callback);
h_axes1 = axes('parent', h_panelSho, ...
                'units','characters', ...
                'position',[1.8 0.2 92.8 10.15], ...
                'visible','off');   
h_button3 = uicontrol('parent',h_panelLoa, ...
                       'units','characters', ...
                       'position',[3.6 10.62 11.6 1.769], ...
                       'string','打开目录', ...
                       'fontsize',8, ...
                       'callback', @button3Callback);            
h_text1 = uicontrol('style','text', ...
                    'parent', h_panelLoa, ...
                    'units','characters', ...
                    'position', [2.8 7.615 13.2 1.154], ...
                    'string','ID func:', ...
                    'fontsize',8);    
h_edit1 = uicontrol('style','edit', ...         % idfunc edit
                    'parent',h_panelLoa, ...
                    'units','characters', ...
                    'position',[2.8 5.154 13.2 1.615], ...
                    'string', '1,3', ...
                    'fontsize',8, ...
                    'backgroundcolor','w');     
h_popupmenu1 = uicontrol('style','popupmenu', ...
                        'parent',h_panelDiv, ...
                        'units','characters', ...
                        'position',[5.2 10.54 15.4 1.846], ...
                        'backgroundcolor','w', ...
                        'string', strList, ...
                        'value', 1, ...
                        'fontsize', 8);   
h_button4 = uicontrol('parent',h_panelDiv, ...
                       'units','characters', ...
                       'position',[7.4 6.769 11.6 1.769], ...
                       'string', '开始划分', ...
                       'fontsize', 8, ...
                       'callback', @button4Callback);    
h_radiobutton1 = uicontrol('style','radiobutton', ...
                            'parent',h_panelMet, ...
                            'units','characters', ...
                            'position',[2.2 10.46 13 1.769], ...
                            'string','PCA', ...
                            'fontsize',8, ...
                            'value', 1);               
h_radiobutton2 = uicontrol('style','radiobutton', ...
                            'parent',h_panelMet, ...
                            'units','characters', ...
                            'position',[2.2 8.462 13 1.769], ...
                            'string','LDA', ...
                            'fontsize',8, ...
                            'value', 0); 
h_radiobutton3 = uicontrol('style','radiobutton', ...
                            'parent',h_panelMet, ...
                            'units','characters', ...
                            'position',[2.2 6.462 15.4 1.769], ...
                            'string','MPCA', ...
                            'fontsize',8, ...
                            'value', 0); 
h_radiobutton4 = uicontrol('style','radiobutton', ...
                            'parent',h_panelMet, ...
                            'units','characters', ...
                            'position',[2.2 4.462 15.6 1.769], ...
                            'string','PCA+LDA', ...
                            'fontsize',8, ...
                            'value', 0); 
h_radiobutton5 = uicontrol('style','radiobutton', ...
                            'parent',h_panelMet, ...
                            'units','characters', ...
                            'position',[2.2 2.077 17 1.769], ...
                            'string','MPCA+LDA', ...
                            'fontsize',8, ...
                            'value', 0);      
h_text2 = uicontrol('style','text', ...
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [3.2000   11.3077   13.2000    1.1538], ...
                    'string', 'm1:', ...
                    'fontsize', 8);
h_text3 = uicontrol('style','text', ...
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [3.2000    8.8462   13.2000    1.1538], ...
                    'string', 'm2:', ...
                    'fontsize', 8); 
h_text4 = uicontrol('style','text', ...
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [3.2000    6.3846   13.2000    1.1538], ...
                    'string', 'p:', ...
                    'fontsize', 8);  
h_text5 = uicontrol('style','text', ...
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [3.2000    3.8462   13.2000    1.2308], ...
                    'string', 'new size:', ...
                    'fontsize', 8); 
h_text8 = uicontrol('style','text', ...
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [3.2000    1.0000   13.2000    1.1538], ...
                    'string', '阈值:', ...
                    'fontsize', 8);                 
h_editm1 = uicontrol('style','edit', ...             % m1 edit
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [16.6000   11.1538   13.2000    1.6154], ...
                    'string', '0', ...
                    'backgroundcolor', 'w', ...
                    'fontsize', 8);
h_editm2 = uicontrol('style','edit', ...             % m2 edit
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [16.6000    8.6923   13.2000    1.6154], ...
                    'string', '0', ...
                    'backgroundcolor', 'w', ...
                    'fontsize', 8);
h_editp = uicontrol('style','edit', ...             % p edit
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [16.6000    6.2308   13.2000    1.6154], ...
                    'string', '0', ...
                    'backgroundcolor', 'w', ...
                    'fontsize', 8);
h_editnewSize = uicontrol('style','edit', ...             % newSize edit
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [16.6000    3.7692   13.2000    1.6154], ...
                    'string', '15,15', ...
                    'backgroundcolor', 'w', ...
                    'fontsize', 8);
h_editth = uicontrol('style','edit', ...             % 阈值 edit
                    'parent',h_panelPar, ...
                    'units','characters', ...
                    'position', [16.6000    0.8462   13.2000    1.6154], ...
                    'string', '0.449', ...
                    'backgroundcolor', 'w', ...
                    'fontsize', 8);                
h_button5 = uicontrol('parent',h_panelTra, ...
                       'units','characters', ...
                       'position',[59.2 7.615 13 1.923], ...
                       'string','开始训练', ...
                       'fontsize', 8, ...
                       'callback', @button5Callback);
h_button6 = uicontrol('parent',h_panelTes, ...
                       'units','characters', ...
                       'position',[9.6 10.62 16.6 1.769], ...
                       'string','采用测试集测试', ...
                       'fontsize', 8, ...
                       'callback', @button6Callback);
h_button7 = uicontrol('parent',h_panelTes, ...
                       'units','characters', ...
                       'position',[9.6 5 16.6 1.769], ...
                       'string','识别指定图片', ...
                       'fontsize', 8, ...
                       'callback', @button7Callback);
h_button8 = uicontrol('parent',h_panelTes, ...
                       'units','characters', ...
                       'position',[9.6 7.85 16.6 1.769], ...
                       'string','查看识别结果', ...
                       'fontsize',8 ,...
                       'callback',@button8Callback);
h_button9 = uicontrol('parent', h_panelDR, ...
                      'units', 'characters', ...
                      'position', [11 8 15.8 2.5], ...
                      'string', '从图片', ...
                      'fontsize', 10, ...
                      'callback', @button9Callback);   
h_button10 = uicontrol('parent', h_panelDR, ...
                      'units', 'characters', ...
                      'position', [11 3.9 15.8 2.5], ...
                      'string', '从摄像头', ...
                      'fontsize', 10, ...
                      'callback', @button10Callback);                   
set(h_mainfig, 'visible', 'on'); 
h_fig2 = [];
                   
% 用户数据结构
outstr = cell(0);
in_out_th = str2double(get(h_editth, 'string'));
currDatabasePath = '';
currValue = get(h_popupmenu1, 'value');
currDivMet = strList{currValue};
% currTraMet = get(get(h_panelMet,'selectedobject'),'string');
currTraPar = struct('lm_num',0,'lm_num1',0,'lm_num2',0,'p',0,'newSize',[15, 15]);
updateTrainParams;

% callback
    function panelMetCallback(h, ~)
        str = get(get(h,'selectedobject'),'string');
        switch str
            case 'PCA'
                set(h_editnewSize, 'string', '15,15');
            case 'LDA'
                set(h_editnewSize, 'string', '10,10');
            case 'MPCA'
                set(h_editnewSize, 'string', '15,15');
            case 'PCA+LDA'
                set(h_editnewSize, 'string', '10,10');
            case 'MPCA+LDA'
                set(h_editnewSize, 'string', '15,15');
        end
    end

    function button9Callback(h,~)
        [filename, path] = uigetfile('*', 'Select input image');
        if filename == 0
            updateOut('没有选择任何图片！');
            return;
        end
        img = imread([path,filesep, filename]);
        [bbox, faces, img] = my_face_detector(img);
        axes(h_axes1);
        imshow(img)
        title('检测到的人脸图像','fontsize',8);
        updateOut(['打开图片成功，检测到', num2str(size(bbox,1)), '个人脸！']);
        if isempty(faces)
            updateOut('没有检测到人脸，无法进行识别！');
            return;
        end
        filename = [makeName,'traindata.mat'];
        if ~(haveFile(filename))
            updateOut(['没有找到训练数据“',filename,'”！']);
            return;
        end
        imwrite(faces{1}, '.\tempImg.png');
        in_out_th = str2double(get(h_editth, 'string'));
        switch currTraMet
            case {'PCA', 'LDA', 'PCA+LDA'}
                load(filename,'T','x_mean_train','newSize');
                x = arrDataMat({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train, T, in_out_th, 1);
            case {'MPCA'}
                load(filename,'T','x_mean_train2D','newSize');
                x = arrDataMat2D({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train2D, T, in_out_th, 2);
            case 'MPCA+LDA'
                load(filename,'T1','T2', 'x_mean_train2D','newSize');
                x = arrDataMat2D({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train2D, {T1;T2}, in_out_th, 3);
        end
        if flg == false
            updateOut('不是人脸库中的图片！');
            return;
        end
        [test_label, ~] = proj_test(currTraMet, filename, {'.\tempImg.png'}, @eulerDis);
        updateOut(['使用', currTraMet, '对检测到的人脸进行识别，识别结果是：', test_label{1}, '。']);
        if ~(haveFile('trainInfo.mat'))
            updateOut('没有找到训练数据“trainInfo.mat”！');
            return;
        end
        load('trainInfo.mat', 'trainInfo');
        imgcomb = compareImg('.\tempImg.png', test_label{1}, trainInfo);
        axes(h_axes1);
        imshow(imgcomb);
        title('待识别图片（左）与从人脸库中识别出的结果（右）','fontsize',8);       
    end

    function button10Callback(h,~)
        obj = videoinput('winvideo', 1);
        set(obj, 'ReturnedColorSpace', 'rgb');
        preview(obj);
        pause(3);
        frame = getsnapshot(obj);
        [bbox, faces, frame] = my_face_detector(frame);
        axes(h_axes1);
        imshow(frame);
        title('检测到的人脸图像','fontsize',8);
        delete(obj);
        updateOut(['打开摄像头成功，检测到', num2str(size(bbox,1)), '个人脸！']);
        if isempty(faces)
            updateOut('没有检测到人脸，无法进行识别！');
            return;
        end
        filename = [makeName,'traindata.mat'];
        if ~(haveFile(filename))
            updateOut(['没有找到训练数据“',filename,'”！']);
            return;
        end
        imwrite(faces{1}, '.\tempImg.png');        
        in_out_th = str2double(get(h_editth, 'string'));
        switch currTraMet
            case {'PCA', 'LDA', 'PCA+LDA'}
                load(filename,'T','x_mean_train','newSize');
                x = arrDataMat({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train, T, in_out_th, 1);
            case {'MPCA'}
                load(filename,'T','x_mean_train2D','newSize');
                x = arrDataMat2D({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train2D, T, in_out_th, 2);
            case 'MPCA+LDA'
                load(filename,'T1','T2', 'x_mean_train2D','newSize');
                x = arrDataMat2D({'.\tempImg.png'}, newSize);
                flg = judgeInside(x, x_mean_train2D, {T1;T2}, in_out_th, 3);
        end
        if flg == false
            updateOut('不是人脸库中的图片！');
            return;
        end
        [test_label, ~] = proj_test(currTraMet, filename, {'.\tempImg.png'}, @eulerDis);
        updateOut(['使用', currTraMet, '对检测到的人脸进行识别，识别结果是：', test_label{1}, '。']);
        if ~(haveFile('trainInfo.mat'))
            updateOut('没有找到训练数据“trainInfo.mat”！');
            return;
        end
        load('trainInfo.mat', 'trainInfo');
        imgcomb = compareImg('.\tempImg.png', test_label{1}, trainInfo);
        axes(h_axes1);
        imshow(imgcomb);
        title('待识别图片（左）与从人脸库中识别出的结果（右）','fontsize',8);  
    end
    function mainfigDeleteFcn(h, ~)
        if ishandle(h_fig2)
            close(h_fig2);
        end 
    end
    function button1Callback(h,~)               % 图片检测按钮的callback
        [filename, path] = uigetfile('*', 'Select input image');
        if filename == 0
            updateOut('没有选择任何图片！');
            return;
        end
        img = imread([path,filesep, filename]);
        [bbox, ~, img] = my_face_detector(img);
        axes(h_axes1);
        imshow(img)
        title('检测到的人脸图像','fontsize',8);
        updateOut(['打开图片成功，检测到', num2str(size(bbox,1)), '个人脸！']);
    end
    function button2Callback(h,~)               % 打开摄像头按钮callback
        obj = videoinput('winvideo', 1);
        set(obj, 'ReturnedColorSpace', 'rgb');
        preview(obj);
        pause(3);
        frame = getsnapshot(obj);
        [bbox, ~, frame] = my_face_detector(frame);
        axes(h_axes1);
        imshow(frame);
        title('检测到的人脸图像','fontsize',8);
        delete(obj);
        updateOut(['打开摄像头成功，检测到', num2str(size(bbox,1)), '个人脸！']);
    end
    function button3Callback(h,~)               % 打开目录按钮callback
        str = get(h_edit1, 'string');
        str = strtrim(str); %去除首位多余空白
        tempCell = regexp(str, ',', 'split'); %使用正则表达式匹配
        startIndex = str2double(tempCell{1});
        endIndex = str2double(tempCell{2});
        currDatabasePath = uigetdir;
        if currDatabasePath ==0 
            updateOut('没有选择任何目录！');
            return;
        end
        databaseInfo = loadDatabase(currDatabasePath, @(in) in(startIndex:endIndex));
        save('databaseInfo.mat','databaseInfo');
        str = ['加载人脸库成功，将人脸库信息保存到“databaseInfo.mat”！人脸库信息：共有',num2str(databaseInfo.N),'图片，',num2str(databaseInfo.C),'个人。'];
        updateOut(str);
    end
    function button4Callback(h,~)               % 开始划分按钮callback
        currValue = get(h_popupmenu1, 'value');
        currDivMet = strList{currValue};
        switch currDivMet
            case '选择第一张'
                choose = @(in) in(1);
            case '选择最后一张'
                choose = @(in) in(end);
            case '随机'
                choose = @(in) in(randi([1,length(in)]));
        end
        if ~(haveFile('databaseInfo.mat'))
            updateOut('当前目录下没有“databaseInfo.mat”，请先加载人脸库！');
            return;
        end
        load('databaseInfo.mat','databaseInfo');
        [trainInfo, testInfo] = divideSet(databaseInfo, choose);
        save('trainInfo.mat','trainInfo');
        save('testInfo.mat','testInfo');
        str = ['划分训练集与测试集成功，分别保存到“trainInfo.mat”、“testInfo.mat”！训练集信息：共',num2str(trainInfo.N), ...
            '张图片，',num2str(trainInfo.C),'个人；测试集信息：共', ...
            num2str(testInfo.N),'张图片，',num2str(testInfo.C),'个人。'];
        updateOut(str);
    end
    function button5Callback(h,~)               % 开始训练按钮callback
        if ~(haveFile('trainInfo.mat'))
            updateOut('当前目录下没有“trainInfo.mat”，请先划分人脸库！');
            return;
        end
        load('trainInfo.mat','trainInfo');
%         currTraMet = get(get(h_panelMet,'selectedobject'),'string');
        updateTrainParams;
        filename = [makeName,'traindata.mat'];
        proj_train(trainInfo, currTraMet, currTraPar, filename);
        str = ['使用',currTraMet,'算法训练完成！将训练数据保存在“',filename,'”中。'];
        updateOut(str);
    end
    function button6Callback(h,~)               % 采用测试集测试callback
        filename = [makeName, 'traindata.mat'];
        if ~(haveFile(filename))
            updateOut(['没有找到训练数据“',filename,'”！']);
            return;
        end
        if ~(haveFile('testInfo.mat'))
            updateOut('没有找到测试数据信息“testInfo.mat”！');
            return;
        end
        load('testInfo.mat','testInfo');
        [testLabels, rate] = proj_test(currTraMet, filename, testInfo.name_list,@eulerDis, testInfo.label_list);
        save([makeName,'testResult.mat'],'testLabels','rate');
        str = ['使用测试集对',currTraMet,'方法测试完成！测试结果：识别准确率为', num2str(rate),'。'];
        updateOut(str);
    end
    function button7Callback(h,~)               % 识别指定图片的callback
        filename = [makeName,'traindata.mat'];
        if ~(haveFile(filename))
            updateOut(['没有找到训练数据“',filename,'”！']);
            return;
        end
        [filename2, path] = uigetfile('*');
        if filename2 == 0
            updateOut('没有选择任何图片！');
            return;
        end
        imgName1 = [path, filename2];
        imgName{1} = imgName1; 
        
        in_out_th = str2double(get(h_editth, 'string'));
        switch currTraMet
            case {'PCA', 'LDA', 'PCA+LDA'}
                load(filename,'T','x_mean_train','newSize');
                x = arrDataMat(imgName, newSize);
                flg = judgeInside(x, x_mean_train, T, in_out_th, 1);
            case {'MPCA'}
                load(filename,'T','x_mean_train2D','newSize');
                x = arrDataMat2D(imgName, newSize);
                flg = judgeInside(x, x_mean_train2D, T, in_out_th, 2);
            case 'MPCA+LDA'
                load(filename,'T1','T2', 'x_mean_train2D','newSize');
                x = arrDataMat2D(imgName, newSize);
                flg = judgeInside(x, x_mean_train2D, {T1;T2}, in_out_th, 3);
        end
        if flg == false
            updateOut('不是人脸库中的图片！');
            return;
        end
        
        [test_label, ~] = proj_test(currTraMet, filename, imgName, @eulerDis);
        updateOut(['使用', currTraMet, '对“', imgName{1}, '”进行识别，识别结果是：', test_label{1}, '。']);
        if ~(haveFile('trainInfo.mat'))
            updateOut('没有找到训练数据“trainInfo.mat”！');
            return;
        end
        load('trainInfo.mat', 'trainInfo');
        imgcomb = compareImg(imgName1, test_label{1}, trainInfo);
        axes(h_axes1);
        imshow(imgcomb);
        title('待识别图片（左）与从人脸库中识别出的结果（右）','fontsize',8);       
    end
    function button8Callback(h, ~)                  % 查看结果按钮callback
        if ishandle(h_fig2)
            close(h_fig2);
        end
        h_fig2 = figure('units','characters', ...
                    'position',[20.8 9.385 179.6 45.62], ...
                    'color',[0.83,0.81,0.78], ...
                    'visible','off', ...
                    'menubar','none', ...
                     'resize', 'off', ...
                    'name',[currTraMet,'的识别结果'], ...
                    'DeleteFcn', @fig2DeleteFcn);
        h_table1 = uitable('parent',h_fig2, ...
                           'units','normalized', ...
                           'position',[.02 .05 .5 .9], ...
                           'columnname',{'测试样本名称','真实类别','预测类别','T/F'}, ...
                           'columnwidth',{300,40,40,30}, ...
                           'CellSelectionCallback', @table1Callback);    
        h_uipanelSho2 = uipanel('parent',h_fig2, ...
                                'position',[.55 .35 .42 .45], ...
                                'title','图像显示', ...
                                'fontsize',12);
        h_axes2 = axes('parent',h_uipanelSho2, ...
                       'position',[.05 .15 .9 .75], ...
                       'xtick',[], ...
                       'ytick',[], ...
                       'visible', 'off');   
        h_text6 = uicontrol('style','text', ...
                            'parent',h_fig2, ...
                            'units','normalized', ...
                            'position',[.6 .92 .3 .03], ...
                            'fontsize',10);
        h_text7 = uicontrol('style','text', ...
                            'parent',h_fig2, ...
                            'units','normalized', ...
                            'position',[.6 .84 .3 .03], ...
                            'fontsize',10);
        filename = [makeName,'testResult.mat'];
        if ~(haveFile(filename))
            updateOut(['没有找到“',filename,'”！']);
            return;
        end
        load(filename, 'testLabels', 'rate');
        if ~(haveFile('testInfo.mat'))
            updateOut('没有找到“testInfo.mat”！');
        end
        load('testInfo.mat','testInfo');
        data = cell(testInfo.N,4);
        for i=1:testInfo.N
            data{i,1} = testInfo.name_list{i};
            data{i,2} = testInfo.label_list{i};
            data{i,3} = testLabels{i};
            if strcmp(data{i,2},data{i,3})
                data{i,4} = 'T';
            else
                data{i,4} = 'F';
            end
        end
        set(h_table1,'data',data);
        set(h_text6, 'string', ['经测试集测试，',currTraMet,'的总体识别率为：',num2str(rate),'。']);
        set(h_fig2,'visible','on');
        
        function fig2DeleteFcn(h, ~)
%             set(h_mainfig,'visible','on');
        end
        function table1Callback(h, eventdata)
%             set(h_mainfig, 'visible','off');
            if ~(haveFile('trainInfo.mat'))
                updateOut('没有找到“trainInfo.mat”！');
            end
            load('trainInfo.mat','trainInfo');
            ind = eventdata.Indices;
            if size(ind,1) > 1
                updateOut('请选择一行！');
                return;
            end
            data = get(h, 'data');
            if strcmp(data{ind(1),4}, 'T')
                set(h_text7, 'string', '当前识别正确！','foregroundcolor','b');
            else
                set(h_text7, 'string', '当前识别错误！','foregroundcolor','r');
            end
            preLabel = data{ind(1),3};
            imgName = data{ind(1),1};
            imgcomb = compareImg(imgName, preLabel, trainInfo);
            imshow(imgcomb,'parent',h_axes2);
            title('测试图片（左）与最匹配的位于训练集中的图片（右）', ...
                'parent',h_axes2, ...
                'fontsize', 8);
        end
    end
    
% 自定义函数
    function met = currTraMet
        met = get(get(h_panelMet,'selectedobject'),'string');
    end
    function updateOut(str)             % 更新输出信息
          if ~isempty(outstr)
            n = length(outstr);
            for i=n:-1:1
                outstr{i+1} = outstr{i};
            end
            outstr{1} = str;
          else
            outstr = {str};
          end
        set(h_listboxOut, 'string',outstr);
    end
    function result = haveFile(file)
        fileList = getFileList('.','s');
        result = ismember(file, fileList);
    end
    function updateTrainParams
        currTraPar.lm_num = str2double(get(h_editm1, 'string'));
        currTraPar.lm_num1 = currTraPar.lm_num;
        currTraPar.lm_num2 = str2double(get(h_editm2, 'string'));
        currTraPar.p = str2double(get(h_editp, 'string'));
        str = strtrim(get(h_editnewSize, 'string')); %去除首位多余空白
        tempCell = regexp(str, ',', 'split'); %使用正则表达式匹配
        currTraPar.newSize = [str2double(tempCell{1}), str2double(tempCell{2})];
    end
    function filenamePre = makeName
%         currTraMet = get(get(h_panelMet,'selectedobject'),'string');
        switch currTraMet
            case 'PCA'
                filenamePre = 'pca_';
            case 'LDA'
                filenamePre = 'lda_';
            case 'MPCA'
                filenamePre = 'mpca_';
            case 'PCA+LDA'
                filenamePre = 'pca_lda_';
            case 'MPCA+LDA'
                filenamePre = 'mpca_lda_';
        end
    end

    function flg = judgeInside(x, x_mean, t, th, f)
        switch f
            case 1
                e = reprojErr(x, x_mean, t);
            case 2
                e = reprojErr2D(x, x_mean, t);
            case 3
                e = reprojErr2D_(x, x_mean, t{1}, t{2});
        end                
        if e>=th
            flg = false;
        else
            flg = true;
        end
    end

    function e = reprojErr2D(x, x_mean, t)
        % e = reprojErr2D(data, mean, u)
        x_z = x - repmat(x_mean, 1, 1, size(x, 3));
        y = ttm(tensor(x_z),t,[1, 2]); 
        t2 = {t{1}';t{2}'};
        x_z2 = ttm(tensor(y), t2, [1, 2]); 
        x2 = x_z2 + repmat(x_mean, 1, 1, size(x, 3));
        e  = sqrt(sum((x2(:)-x(:)).^2, 2));
    end

    function e = reprojErr2D_(x, x_mean, t1, t2)
    % e = reprojErr2D_(x, x_mean, t1, t2)
        nn = size(x, 3);
        x_z = x - repmat(x_mean, 1, 1, nn);
        y1 = ttm(tensor(x_z),t1,[1, 2]); 
        y1 = y1.data;
        y11 = reshape(y1, nn, size(y1, 1)*size(y1, 2));
        y2 = y11*t2;
        y1_ = y2*t2';
        y1_ = reshape(y1_, size(y1, 1), size(y1, 2), nn);
        t1_ = {t1{1}';t1{2}'};
        x_z2 = ttm(tensor(tensor(y1_)), t1_, [1, 2]); 
        x2 = x_z2.data + repmat(x_mean, 1, 1, nn);
        e  = sqrt(sum((x2(:)-x(:)).^2, 2));
    end
    function imgcomb = compareImg(testname, predLabel, trainInfo)
        imgName1 = testname;
        for i=1:trainInfo.N
            if strcmp(trainInfo.label_list{i}, predLabel)
                imgName2 = trainInfo.name_list{i};
                break;
            end
        end
        img1 = imread(imgName1);
        [h1, w1, ~] = size(img1);
        img2 = imread(imgName2);
        [h2, w2, ~] = size(img2);
        h = min([h1;h2]);
        w = min([w1;w2]);
        d1 = length(size(img1));
        d2 = length(size(img2));
        if d1~=d2
            if d1 == 3
                img1 = rgb2gray(img1);
            elseif d2 == 3
                img2 = rgb2gray(img2);
            end
        end
        img1 = imresize(img1,[h, w]);
        img2 = imresize(img2,[h, w]);
        axes(h_axes1);
        imgcomb = [img1,img2];
    end
end